<?xml version="1.0" encoding="utf-8"?>
<project name="Heroes of Abenenez" basedir="." default="test">
  <target name="test" depends="lint,cs,phpstan,sanity-checks,tests,clean-db"/>
  <target name="test-coverage" depends="lint,cs,phpstan,sanity-checks,tests-coverage,clean-db"/>
  <target name="test-ci" depends="install-ci,test"/>
  <target name="test-ci-coverage" depends="install-ci,test-phpdbg"/>
  <target name="test-phpdbg" depends="lint,cs,phpstan,sanity-checks,tests-phpdbg,clean-db"/>
  <target name="release">
    <input propertyName="version" message="Enter new version number" promptChar=":"/>
    <replaceregexp file="CHANGELOG.md" pattern='Version ([0-9]+\.)+[0-9]+(\+|-)dev' replace='Version ${version}'/>
    <echo message="Written new version number to CHANGELOG."/>
    <exec command="git add CHANGELOG" logoutput="true" passthru="true" checkreturn="true"/>
    <exec command="git commit --message='Version ${version}'" logoutput="true" passthru="true" checkreturn="true"/>
    <echo message="Created release commit."/>
    <exec command="git tag ${version} --message='Version ${version}' --sign" logoutput="true" passthru="true" checkreturn="true"/>
    <echo message="Created tag."/>
  </target>
  <target name="install-ci">
    <mkdir dir="tests/_temp"/>
    <copy file="tests/ci.neon" tofile="tests/local.neon"/>
    <exec executable="composer" logoutput="true" passthru="true" checkreturn="true">
      <arg value="install"/>
      <arg value="--prefer-dist"/>
      <arg value="--no-progress"/>
      <arg value="--no-suggest"/>
      <arg value="--no-interaction"/>
    </exec>
  </target>
  <target name="setup-db">
    <exec executable="php" logoutput="true" passthru="true" checkreturn="true">
      <arg path="ci/setup_db.php"/>
    </exec>
  </target>
  <target name="lint" description="Syntax checks" >
    <exec executable="vendor/bin/parallel-lint" logoutput="true" passthru="true" checkreturn="true">
      <arg value="."/>
      <arg value="-e"/>
      <arg value="php,phpt"/>
      <arg value="--exclude"/>
      <arg path="vendor"/>
      <arg value="--exclude"/>
      <arg path="temp"/>
      <arg value="--exclude"/>
      <arg path="tests/_temp"/>
      <arg value="--colors"/>
    </exec>
  </target>
  <target name="cs" description="Coding standards compliance">
    <exec executable="vendor/bin/phpcs" logoutput="true" passthru="true" checkreturn="true">
      <arg value="--extensions=php,phpt"/>
      <arg value="."/>
      <arg value="--standard=vendor/nexendrie/code-quality/ruleset.xml"/>
      <arg value="--colors"/>
      <arg value="-p"/>
    </exec>
  </target>
  <target name="phpstan" description="PHPStan analyzes">
    <exec executable="vendor/bin/phpstan" logoutput="true" passthru="true" checkreturn="true">
      <arg value="analyze"/>
    </exec>
  </target>
  <target name="sanity-checks" description="Sanity checks for data" depends="setup-db">
    <exec executable="php" logoutput="true" passthru="true" checkreturn="true">
      <arg path="ci/sanity_checks.php"/>
    </exec>
  </target>
  <target name="tests" description="Unit tests" depends="setup-db">
    <exec executable="vendor/bin/run-tests" logoutput="true" passthru="true" checkreturn="true">
      <arg value="-p"/>
      <arg value="php"/>
      <arg path="tests"/>
      <arg value="-s"/>
    </exec>
  </target>
  <target name="tests-coverage" description="Unit tests with code coverage (XDebug)" depends="setup-db">
    <exec executable="vendor/bin/run-tests" logoutput="true" passthru="true" checkreturn="true">
      <arg value="-p"/>
      <arg value="php"/>
      <arg path="tests"/>
      <arg value="--coverage"/>
      <arg path="./coverage.html"/>
      <arg value="--coverage-src"/>
      <arg path="./app"/>
      <arg value="-s"/>
    </exec>
  </target>
  <target name="tests-phpdbg" description="Unit tests with code coverage (phpdbg)" depends="setup-db">
    <exec executable="vendor/bin/run-tests" logoutput="true" passthru="true" checkreturn="true">
      <arg value="-p"/>
      <arg value="phpdbg"/>
      <arg path="tests"/>
      <arg value="--coverage"/>
      <arg path="./coverage.html"/>
      <arg value="--coverage-src"/>
      <arg path="./app"/>
      <arg value="-s"/>
    </exec>
  </target>
  <target name="clean-db">
    <exec executable="php" logoutput="true" passthru="true" checkreturn="true">
      <arg path="ci/clean_db.php"/>
    </exec>
  </target>
  <target name="scrutinizer">
    <phingcall target="install-ci"/>
    <exec executable="vendor/bin/phpcs" logoutput="true" passthru="true" checkreturn="true">
      <arg value="--extensions=php,phpt"/>
      <arg value="."/>
      <arg value="--standard=vendor/nexendrie/code-quality/ruleset.xml"/>
      <arg value="--report=checkstyle"/>
      <arg value="--report-file=codesniffer.cs"/>
    </exec>
    <exec executable="php" logoutput="true" passthru="true" checkreturn="true">
      <arg path="ci/scrutinizer_setup.php"/>
    </exec>
    <exec command="mysql -uroot -e 'CREATE DATABASE heroesofabenez'" logoutput="true" passthru="true" checkreturn="true"/>
    <exec command="mysql_tzinfo_to_sql /usr/share/zoneinfo | mysql -u root mysql" logoutput="true" passthru="true" checkreturn="true"/>
    <phingcall target="setup-db"/>
    <exec executable="vendor/bin/run-tests" logoutput="true" passthru="true" checkreturn="true">
      <arg value="-p"/>
      <arg value="php"/>
      <arg path="tests"/>
      <arg value="--coverage"/>
      <arg path="./coverage.xml"/>
      <arg value="--coverage-src"/>
      <arg path="./app"/>
    </exec>
  </target>
</project>
